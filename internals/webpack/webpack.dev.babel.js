const path = require('path');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const CircularDependencyPlugin = require('circular-dependency-plugin');
const publicPath = process.env.DEV_URL;
let INDEX = 'index';

const entry = `app/app.js`;
const xrw = 'X-Requested-With, content-type, Authorization';
module.exports = require('./webpack.base.babel')({
  mode: 'development',
  entry: [
    require.resolve('@babel/polyfill'),
    'webpack-hot-middleware/client?reload=true',
    path.join(process.cwd(), entry), // Start with js/app.js
  ],
  output: {
    publicPath,
    filename: '[name].js',
    chunkFilename: '[name].chunk.js',
    jsonpFunction: 'maxJsonpForm2d',
  },
  optimization: {
    splitChunks: {
      chunks: 'all',
    },
  },
  plugins: [
    new webpack.DefinePlugin({
      'process.env.NODE_ENV': JSON.stringify('development'),
      'process.env.REST_API': JSON.stringify(process.env.REST_API),
    }),
    new webpack.HotModuleReplacementPlugin(), // Tell webpack we want hot reloading
    new HtmlWebpackPlugin({
      inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
      template: `app/${INDEX}.html`,
    }),
    new CircularDependencyPlugin({
      exclude: /a\.js|node_modules/, // exclude node_modules
      failOnError: false, // show a warning when there is a circular dependency
    }),
  ],

  // Emit a source map for easier debugging
  // See https://webpack.js.org/configuration/devtool/#devtool
  devtool: 'eval-source-map',
  devServer: {
    hot: false,
    headers: {
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, PATCH, OPTIONS',
      'Access-Control-Allow-Headers': xrw,
    },
  },
  performance: {
    hints: false,
  },
});
